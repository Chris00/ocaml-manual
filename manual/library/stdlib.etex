\chapter{The standard library}
\pdfchapterfold{-32}{The standard library}

This chapter describes the functions provided by the Objective Caml
standard library. The modules from the standard library are
automatically linked with the user's object code files by the "ocamlc"
command. Hence, these modules can be used in standalone programs without
having to add any ".cmo" file on the command line for the linking
phase. Similarly, in interactive use, these globals can be used in
toplevel phrases without having to load any ".cmo" file in memory.

Unlike the "Pervasive" module from the core library, the modules from the
standard library are not automatically ``opened'' when a compilation
starts, or when the toplevel system is launched. Hence it is necessary
to use qualified identifiers to refer to the functions provided by these
modules, or to add "open" directives.

\label{stdlib:top}

\section*{Conventions}

For easy reference, the modules are listed below in alphabetical order
of module names.
For each module, the declarations from its signature are printed
one by one in typewriter font, followed by a short comment.
All modules and the identifiers they export are indexed at the end of
this report.

\begin{latexonly}
\section*{Overview}

Here is a short listing, by theme, of the standard library modules.

\subsubsection*{Data structures:}
\begin{tabular}{lll}
"Char" & p.~\pageref{Char} & character operations \\
"String" & p.~\pageref{String} & string operations \\
"Array" & p.~\pageref{Array} & array operations \\
"List" & p.~\pageref{List} & list operations \\
"StdLabels" &p.~\pageref{StdLabels} & labelized versions of
the above 3 modules \\
"Sort" & p.~\pageref{Sort} & sorting and merging lists \\
"Hashtbl" & p.~\pageref{Hashtbl} & hash tables and hash functions \\
"Random" & p.~\pageref{Random} & pseudo-random number generator \\
"Set" & p.~\pageref{Set} & sets over ordered types \\
"Map" & p.~\pageref{Map} & association tables over ordered types \\
"Oo" & p.~\pageref{Oo} & useful functions on objects \\
"Stack" & p.~\pageref{Stack} & last-in first-out stacks \\
"Queue" & p.~\pageref{Queue} & first-in first-out queues \\
"Buffer" & p.~\pageref{Buffer} & string buffers that grow on demand \\
"Lazy"  & p.~\pageref{Lazy} & delayed evaluation \\
"Weak" & p.~\pageref{Weak} & references that don't prevent objects from being garbage-collected \\
"Int32" & p.~\pageref{Int32} & operations on 32-bit integers \\
"Int64" & p.~\pageref{Int64} & operations on 64-bit integers \\
"Nativeint" & p.~\pageref{Nativeint} & operations on platform-native
integers
\end{tabular}
\subsubsection{Input/output:}
\begin{tabular}{lll}
"Format" & p.~\pageref{Format} & pretty printing \\
"Marshal" & p.~\pageref{Marshal} & marshaling of data structures \\
"Printf" & p.~\pageref{Printf} & formatting printing functions \\
"Digest" & p.~\pageref{Digest} & MD5 message digest \\
\end{tabular}
\subsubsection{Parsing:}
\begin{tabular}{lll}
"Genlex" & p.~\pageref{Genlex} & a generic lexer over streams \\
"Lexing" & p.~\pageref{Lexing} & the run-time library for lexers generated by "camllex" \\
"Parsing" & p.~\pageref{Parsing} & the run-time library for parsers generated by "camlyacc" \\
"Stream" & p.~\pageref{Stream} & basic functions over streams \\
\end{tabular}
\subsubsection{System interface:}
\begin{tabular}{lll}
"Arg" & p.~\pageref{Arg} & parsing of command line arguments \\
"Callback" & p.~\pageref{Callback} & registering Caml functions to
be called from C \\
"Filename" & p.~\pageref{Filename} & operations on file names \\
"Gc" & p.~\pageref{Gc} & memory management control and statistics \\
"Printexc" & p.~\pageref{Printexc} & a catch-all exception handler \\
"Sys" & p.~\pageref{Sys} & system interface \\
\end{tabular}
\end{latexonly}

%HEVEA\cutdef{section}
\begin{library}
\input{Arg.tex}
\input{Array.tex}
\input{Buffer.tex}
\input{Callback.tex}
\input{Char.tex}
\input{Digest.tex}
\input{Filename.tex}
\input{Format.tex}
\input{Gc.tex}
\input{Genlex.tex}
\input{Hashtbl.tex}
\input{Int32.tex}
\input{Int64.tex}
\input{Lazy.tex}
\input{Lexing.tex}
\input{List.tex}
\input{Map.tex}
\input{Marshal.tex}
\input{Nativeint.tex}
\input{Oo.tex}
\input{Parsing.tex}
\input{Printexc.tex}
\input{Printf.tex}
\input{Queue.tex}
\input{Random.tex}
\input{Set.tex}
\input{Sort.tex}
\input{Stack.tex}
\input{StdLabels.tex}
\input{Stream.tex}
\input{String.tex}
\input{Sys.tex}
\input{Weak.tex}
\end{library}
%HEVEA\cutend